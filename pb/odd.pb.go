// Code generated by protoc-gen-go. DO NOT EDIT.
// source: odd.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_odd_92fad43a8bb1c123, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Team struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	NameCn               string   `protobuf:"bytes,2,opt,name=name_cn,json=nameCn" json:"name_cn,omitempty"`
	NameEn               string   `protobuf:"bytes,3,opt,name=name_en,json=nameEn" json:"name_en,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Team) Reset()         { *m = Team{} }
func (m *Team) String() string { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()    {}
func (*Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_odd_92fad43a8bb1c123, []int{1}
}
func (m *Team) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Team.Unmarshal(m, b)
}
func (m *Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Team.Marshal(b, m, deterministic)
}
func (dst *Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Team.Merge(dst, src)
}
func (m *Team) XXX_Size() int {
	return xxx_messageInfo_Team.Size(m)
}
func (m *Team) XXX_DiscardUnknown() {
	xxx_messageInfo_Team.DiscardUnknown(m)
}

var xxx_messageInfo_Team proto.InternalMessageInfo

func (m *Team) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Team) GetNameCn() string {
	if m != nil {
		return m.NameCn
	}
	return ""
}

func (m *Team) GetNameEn() string {
	if m != nil {
		return m.NameEn
	}
	return ""
}

type League struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Shortname            string   `protobuf:"bytes,2,opt,name=shortname" json:"shortname,omitempty"`
	NameCn               string   `protobuf:"bytes,3,opt,name=name_cn,json=nameCn" json:"name_cn,omitempty"`
	NameEn               string   `protobuf:"bytes,4,opt,name=name_en,json=nameEn" json:"name_en,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *League) Reset()         { *m = League{} }
func (m *League) String() string { return proto.CompactTextString(m) }
func (*League) ProtoMessage()    {}
func (*League) Descriptor() ([]byte, []int) {
	return fileDescriptor_odd_92fad43a8bb1c123, []int{2}
}
func (m *League) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_League.Unmarshal(m, b)
}
func (m *League) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_League.Marshal(b, m, deterministic)
}
func (dst *League) XXX_Merge(src proto.Message) {
	xxx_messageInfo_League.Merge(dst, src)
}
func (m *League) XXX_Size() int {
	return xxx_messageInfo_League.Size(m)
}
func (m *League) XXX_DiscardUnknown() {
	xxx_messageInfo_League.DiscardUnknown(m)
}

var xxx_messageInfo_League proto.InternalMessageInfo

func (m *League) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *League) GetShortname() string {
	if m != nil {
		return m.Shortname
	}
	return ""
}

func (m *League) GetNameCn() string {
	if m != nil {
		return m.NameCn
	}
	return ""
}

func (m *League) GetNameEn() string {
	if m != nil {
		return m.NameEn
	}
	return ""
}

type Odd struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Home                 *Team    `protobuf:"bytes,2,opt,name=home" json:"home,omitempty"`
	Away                 *Team    `protobuf:"bytes,3,opt,name=away" json:"away,omitempty"`
	BetType              string   `protobuf:"bytes,4,opt,name=bet_type,json=betType" json:"bet_type,omitempty"`
	Outcome              string   `protobuf:"bytes,5,opt,name=outcome" json:"outcome,omitempty"`
	Payout               float64  `protobuf:"fixed64,6,opt,name=payout" json:"payout,omitempty"`
	MinBet               int64    `protobuf:"varint,7,opt,name=min_bet,json=minBet" json:"min_bet,omitempty"`
	League               *League  `protobuf:"bytes,8,opt,name=league" json:"league,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Odd) Reset()         { *m = Odd{} }
func (m *Odd) String() string { return proto.CompactTextString(m) }
func (*Odd) ProtoMessage()    {}
func (*Odd) Descriptor() ([]byte, []int) {
	return fileDescriptor_odd_92fad43a8bb1c123, []int{3}
}
func (m *Odd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Odd.Unmarshal(m, b)
}
func (m *Odd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Odd.Marshal(b, m, deterministic)
}
func (dst *Odd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Odd.Merge(dst, src)
}
func (m *Odd) XXX_Size() int {
	return xxx_messageInfo_Odd.Size(m)
}
func (m *Odd) XXX_DiscardUnknown() {
	xxx_messageInfo_Odd.DiscardUnknown(m)
}

var xxx_messageInfo_Odd proto.InternalMessageInfo

func (m *Odd) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Odd) GetHome() *Team {
	if m != nil {
		return m.Home
	}
	return nil
}

func (m *Odd) GetAway() *Team {
	if m != nil {
		return m.Away
	}
	return nil
}

func (m *Odd) GetBetType() string {
	if m != nil {
		return m.BetType
	}
	return ""
}

func (m *Odd) GetOutcome() string {
	if m != nil {
		return m.Outcome
	}
	return ""
}

func (m *Odd) GetPayout() float64 {
	if m != nil {
		return m.Payout
	}
	return 0
}

func (m *Odd) GetMinBet() int64 {
	if m != nil {
		return m.MinBet
	}
	return 0
}

func (m *Odd) GetLeague() *League {
	if m != nil {
		return m.League
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterType((*Team)(nil), "pb.Team")
	proto.RegisterType((*League)(nil), "pb.League")
	proto.RegisterType((*Odd)(nil), "pb.Odd")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OddService service

type OddServiceClient interface {
	Poll(ctx context.Context, in *Empty, opts ...grpc.CallOption) (OddService_PollClient, error)
}

type oddServiceClient struct {
	cc *grpc.ClientConn
}

func NewOddServiceClient(cc *grpc.ClientConn) OddServiceClient {
	return &oddServiceClient{cc}
}

func (c *oddServiceClient) Poll(ctx context.Context, in *Empty, opts ...grpc.CallOption) (OddService_PollClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_OddService_serviceDesc.Streams[0], c.cc, "/pb.OddService/Poll", opts...)
	if err != nil {
		return nil, err
	}
	x := &oddServicePollClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type OddService_PollClient interface {
	Recv() (*Odd, error)
	grpc.ClientStream
}

type oddServicePollClient struct {
	grpc.ClientStream
}

func (x *oddServicePollClient) Recv() (*Odd, error) {
	m := new(Odd)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for OddService service

type OddServiceServer interface {
	Poll(*Empty, OddService_PollServer) error
}

func RegisterOddServiceServer(s *grpc.Server, srv OddServiceServer) {
	s.RegisterService(&_OddService_serviceDesc, srv)
}

func _OddService_Poll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OddServiceServer).Poll(m, &oddServicePollServer{stream})
}

type OddService_PollServer interface {
	Send(*Odd) error
	grpc.ServerStream
}

type oddServicePollServer struct {
	grpc.ServerStream
}

func (x *oddServicePollServer) Send(m *Odd) error {
	return x.ServerStream.SendMsg(m)
}

var _OddService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.OddService",
	HandlerType: (*OddServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Poll",
			Handler:       _OddService_Poll_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "odd.proto",
}

func init() { proto.RegisterFile("odd.proto", fileDescriptor_odd_92fad43a8bb1c123) }

var fileDescriptor_odd_92fad43a8bb1c123 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x4a, 0x33, 0x31,
	0x10, 0x80, 0xff, 0xec, 0x6e, 0x93, 0xee, 0xfc, 0xe0, 0x21, 0x07, 0x8d, 0x22, 0x52, 0xf6, 0xd4,
	0x83, 0x14, 0xa9, 0x6f, 0xa0, 0x14, 0x3c, 0x08, 0x95, 0xb5, 0xf7, 0x92, 0x34, 0x83, 0x5d, 0xe8,
	0x26, 0x61, 0xcd, 0x2a, 0xfb, 0xac, 0xbe, 0x8c, 0x24, 0x0d, 0xb6, 0x45, 0xbc, 0x65, 0xe6, 0x1b,
	0xe6, 0x9b, 0xcc, 0x40, 0x69, 0xb5, 0x9e, 0xb9, 0xce, 0x7a, 0xcb, 0x33, 0xa7, 0x2a, 0x06, 0xa3,
	0x45, 0xeb, 0xfc, 0x50, 0x3d, 0x41, 0xb1, 0x42, 0xd9, 0xf2, 0x33, 0xc8, 0x1a, 0x2d, 0xc8, 0x84,
	0x4c, 0xf3, 0x3a, 0x6b, 0x34, 0xbf, 0x00, 0x66, 0x64, 0x8b, 0xeb, 0x8d, 0x11, 0xd9, 0x84, 0x4c,
	0xcb, 0x9a, 0x86, 0xf0, 0xd1, 0xfc, 0x00, 0x34, 0x22, 0x3f, 0x80, 0x85, 0xa9, 0xb6, 0x40, 0x9f,
	0x51, 0xbe, 0xf5, 0xf8, 0xab, 0xd7, 0x35, 0x94, 0xef, 0x5b, 0xdb, 0xf9, 0x50, 0x98, 0xba, 0x1d,
	0x12, 0xc7, 0xa6, 0xfc, 0x2f, 0x53, 0x71, 0x62, 0xfa, 0x22, 0x90, 0x2f, 0xb5, 0x3e, 0xf2, 0x94,
	0xc9, 0x53, 0x6c, 0x6d, 0x52, 0xfc, 0x9f, 0x8f, 0x67, 0x4e, 0xcd, 0xc2, 0xdf, 0xea, 0x98, 0x0d,
	0x54, 0x7e, 0xca, 0x21, 0x4a, 0x4e, 0x68, 0xc8, 0xf2, 0x4b, 0x18, 0x2b, 0xf4, 0x6b, 0x3f, 0x38,
	0x4c, 0x36, 0xa6, 0xd0, 0xaf, 0x06, 0x87, 0x5c, 0x00, 0xb3, 0xbd, 0xdf, 0x84, 0xce, 0xa3, 0x3d,
	0x49, 0x21, 0x3f, 0x07, 0xea, 0xe4, 0x60, 0x7b, 0x2f, 0xe8, 0x84, 0x4c, 0x49, 0x9d, 0xa2, 0x30,
	0x79, 0xdb, 0x98, 0xb5, 0x42, 0x2f, 0x58, 0xdc, 0x02, 0x6d, 0x1b, 0xf3, 0x80, 0x9e, 0x57, 0x40,
	0x77, 0x71, 0x47, 0x62, 0x1c, 0xa7, 0x80, 0x30, 0xc5, 0x7e, 0x6b, 0x75, 0x22, 0xf3, 0x5b, 0x80,
	0xa5, 0xd6, 0xaf, 0xd8, 0x7d, 0x34, 0x1b, 0xe4, 0x37, 0x50, 0xbc, 0xd8, 0xdd, 0x8e, 0x97, 0xa1,
	0x32, 0x9e, 0xec, 0x8a, 0x85, 0xe7, 0x52, 0xeb, 0xea, 0xdf, 0x1d, 0x51, 0x34, 0xde, 0xf4, 0xfe,
	0x3b, 0x00, 0x00, 0xff, 0xff, 0x81, 0xf7, 0x5c, 0xc0, 0xe0, 0x01, 0x00, 0x00,
}
